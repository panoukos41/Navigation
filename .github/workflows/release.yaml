name: Release

env:
  DOTNET_NOLOGO: true

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - "src/**/*.cs"
      - "src/**/*.csproj"

jobs:
  build:
    runs-on: windows-2022
    outputs:
      nbgv: ${{ steps.nbgv.outputs.SemVer2 }}
    steps:
      # From ReactiveUI workflow: https://github.com/reactiveui/ReactiveUI/blob/main/.github/workflows/ci-build.yml
      - name: Update VS2022 preview
        shell: bash
        run: |
          dotnet tool update -g dotnet-vs
          vs modify preview +uwp
          echo "##vso[task.prependpath]$(vs where preview --prop=InstallationPath)\MSBuild\Current\Bin"

        # From ReactiveUI workflow: https://github.com/reactiveui/ReactiveUI/blob/main/.github/workflows/ci-build.yml
      - name: Install Windows SDK 10.0.16299
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri https://go.microsoft.com/fwlink/p/?linkid=864422 -OutFile winsdk.exe
          $startInfo = New-Object System.Diagnostics.ProcessStartInfo
          $startInfo.FileName = "winsdk.exe"
          $startInfo.Arguments = "/norestart /quiet"
          $process = New-Object System.Diagnostics.Process
          $process.StartInfo = $startInfo
          $process.Start()
          $process.WaitForExit()

      - name: Checkout
        uses: actions/checkout@v2
        with: { fetch-depth: 0 }

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: "temurin"
          java-version: "11"

      - name: Setup .NET Workloads
        run: |
          dotnet workload install android

      - name: Setup NerdBank.GitVersioning
        uses: dotnet/nbgv@v0.4
        id: nbgv
        with: { setAllVars: true }

      - name: Build
        run: |
          $env:Path += ";C:\Program Files\Microsoft Visual Studio\2022\Preview\Msbuild\Current\Bin";
          msbuild Release.slnf `
            /t:restore,build,pack `
            /p:NoPackageAnalysis=true `
            /p:Configuration=Release `
            /verbosity:minimal `
            /nowarn:MSB4011,VSX1000 `

      - name: Test
        run: |
          dotnet test Release.slnf --no-build

      - name: Upload NuGet Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: nuget
          path: artifacts/nuget/*.nupkg

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Create Release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.build.outputs.nbgv }}
          release_name: ${{ needs.build.outputs.nbgv }}

  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download NuGet Packages
        uses: actions/download-artifact@v2
        with: { name: nuget }

      - name: Publish to NuGet
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.NUGET_API_KEY }}
          SOURCE_URL: https://api.nuget.org/v3/index.json
        run: |
          dotnet nuget push **/*.nupkg --skip-duplicate -s ${{ env.SOURCE_URL }} -k ${{ env.NUGET_AUTH_TOKEN }}
